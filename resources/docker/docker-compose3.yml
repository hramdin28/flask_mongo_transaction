version: '3.7'
services:
  mongo1:
    image: mongo:latest
    container_name: mongo1
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "27017" ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - "27017:27017"
    volumes:
      - dataMongo1:/Users/hanishramdin/data/db_1
      - ./file.key:/auth/file.key
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:27017\"},{_id:1,host:\"mongo2:27018\"},{_id:2,host:\"mongo3:27019\"}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
      interval: 10s
      start_period: 30s

  mongo2:
    image: mongo:latest
    container_name: mongo2
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "27018" ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    volumes:
      - dataMongo2:/Users/hanishramdin/data/db_2
      - ./file.key:/auth/file.key
    ports:
      - "27018:27018"

  mongo3:
    image: mongo:latest
    container_name: mongo3
    command: [ "--replSet", "my-replica-set", "--bind_ip_all", "--port", "27019" ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    volumes:
      - dataMongo3:/Users/hanishramdin/data/db_3
      - ./file.key:/auth/file.key
    ports:
      - "27019:27019"

volumes:
  dataMongo1:
  dataMongo2:
  dataMongo3: